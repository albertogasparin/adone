// @flow
/* eslint-disable no-redeclare */

import type { Node } from 'react';

/**
 * ST: Full basket state
 * PI: Picked basket state (or result)
 * AC: Basket actions
 */

type Produce<ST> = (modifier: (ST) => ST | void) => void;
type BasketStoreUnsubscribe = () => void;

type YieldRenderPropFunction<S, A> = ({
  ...$Exact<S>,
  ...$Exact<A>,
}) => Node;

export type Basket<ST, AC> = {
  key: string,
  defaultState: ST,
  actions: AC,
};

export type BasketStore<ST> = {|
  getState: () => ST,
  setState: ST => void,
  key: string,
  subscribe: (listener: () => void) => BasketStoreUnsubscribe,
  produce: Produce<ST>,
|};

export type BasketAction<ST> = (produce: Produce<ST>, getState: () => ST) => *;

declare export class Yield<ST, AC, PI> extends React$Component<
  | {
      from: Basket<ST, AC>,
      children: YieldRenderPropFunction<ST, AC>,
    }
  | {
      from: Basket<ST, AC>,
      children: YieldRenderPropFunction<PI, AC>,
      pick: ST => PI,
    }
> {
  basket: {
    store: BasketStore<ST>,
    actions: AC,
  };
}

declare export class YieldProvider extends React$Component<{
  baskets?: { [key: string]: any },
}> {}

type MiddlewareResult = { changes: any[] };
export type Middleware = (
  store: BasketStore<any>
) => (next: (fn: any) => MiddlewareResult) => (fn: () => *) => MiddlewareResult;

declare export var defaults: {
  devtools: boolean,
  middlewares: Set<Middleware>,
};

export type fallbackProviderState = {
  baskets: { [key: string]: any },
};

declare export function createYield<ST, AC, PI>(
  from: Basket<ST, AC>
): React$ComponentType<{ children: YieldRenderPropFunction<ST, AC> }>;

declare export function createYield<ST, AC>(
  name: string,
  from: Basket<ST, AC>
): React$ComponentType<{ children: YieldRenderPropFunction<ST, AC> }>;

declare export function createYield<ST, AC, PI>(
  from: Basket<ST, AC>,
  pick: (ST) => PI
): React$ComponentType<{ children: YieldRenderPropFunction<PI, AC> }>;

declare export function createYield<ST, AC, PI>(
  name: string,
  from: Basket<ST, AC>,
  pick: (ST) => PI
): React$ComponentType<{ children: YieldRenderPropFunction<PI, AC> }>;
